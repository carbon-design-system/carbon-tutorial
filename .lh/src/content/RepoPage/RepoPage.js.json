{
    "sourceFile": "src/content/RepoPage/RepoPage.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1631090760704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1631090911614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,38 +64,8 @@\n     header: 'Links',\n   },\n ];\n \n-const rows = [\n-  {\n-    id: '1',\n-    name: 'Repo 1',\n-    createdAt: 'Date',\n-    updatedAt: 'Date',\n-    issueCount: '123',\n-    stars: '456',\n-    links: 'Links',\n-  },\n-  {\n-    id: '2',\n-    name: 'Repo 2',\n-    createdAt: 'Date',\n-    updatedAt: 'Date',\n-    issueCount: '123',\n-    stars: '456',\n-    links: 'Links',\n-  },\n-  {\n-    id: '3',\n-    name: 'Repo 3',\n-    createdAt: 'Date',\n-    updatedAt: 'Date',\n-    issueCount: '123',\n-    stars: '456',\n-    links: 'Links',\n-  },\n-];\n-\n const LinkList = ({ url, homepageUrl }) => (\n   <ul style={{ display: 'flex' }}>\n     <li>\n       <Link href={url}>GitHub</Link>\n@@ -133,9 +103,11 @@\n               // Something went wrong with the data fetching\n               if (error) return `Error! ${error.message}`;\n \n               // If we're here, we've got our data!\n-              console.log(data.organization);\n+              // If we're here, we've got our data!\n+              const { repositories } = data.organization;\n+              const rows = getRowItems(repositories.nodes);\n \n               return (\n                 <>\n                   <RepoTable headers={headers} rows={rows} />\n"
                },
                {
                    "date": 1631091192495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React from 'react';\n import RepoTable from './RepoTable';\n import { gql } from 'apollo-boost';\n import { Query } from 'react-apollo';\n-import { Link } from 'carbon-components-react';\n+import { Link, DataTableSkeleton } from 'carbon-components-react';\n \n const REPO_QUERY = gql`\n   query REPO_QUERY {\n     # Let's use carbon as our organization\n@@ -97,9 +97,16 @@\n         <div className=\"bx--col-lg-16\">\n           <Query query={REPO_QUERY}>\n             {({ loading, error, data }) => {\n               // Wait for the request to complete\n-              if (loading) return 'Loading...';\n+              if (loading)\n+                return (\n+                  <DataTableSkeleton\n+                    columnCount={headers.length + 1}\n+                    rowCount={10}\n+                    headers={headers}\n+                  />\n+                );\n \n               // Something went wrong with the data fetching\n               if (error) return `Error! ${error.message}`;\n \n"
                },
                {
                    "date": 1631091379744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React from 'react';\n+import React, { useState } from 'react';\n import RepoTable from './RepoTable';\n import { gql } from 'apollo-boost';\n import { Query } from 'react-apollo';\n import { Link, DataTableSkeleton } from 'carbon-components-react';\n@@ -90,8 +90,11 @@\n     links: <LinkList url={row.url} homepageUrl={row.homepageUrl} />,\n   }));\n \n const RepoPage = () => {\n+  const [totalItems, setTotalItems] = useState(0);\n+  const [firstRowIndex, setFirstRowIndex] = useState(0);\n+  const [currentPageSize, setCurrentPageSize] = useState(10);\n   return (\n     <div className=\"bx--grid bx--grid--full-width bx--grid--no-gutter repo-page\">\n       <div className=\"bx--row repo-page__r1\">\n         <div className=\"bx--col-lg-16\">\n@@ -110,10 +113,10 @@\n               // Something went wrong with the data fetching\n               if (error) return `Error! ${error.message}`;\n \n               // If we're here, we've got our data!\n-              // If we're here, we've got our data!\n               const { repositories } = data.organization;\n+              setTotalItems(repositories.totalCount);\n               const rows = getRowItems(repositories.nodes);\n \n               return (\n                 <>\n"
                },
                {
                    "date": 1631091423866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,15 @@\n               const rows = getRowItems(repositories.nodes);\n \n               return (\n                 <>\n-                  <RepoTable headers={headers} rows={rows} />\n+                  <RepoTable\n+                    headers={headers}\n+                    rows={rows.slice(\n+                      firstRowIndex,\n+                      firstRowIndex + currentPageSize\n+                    )}\n+                  />\n                 </>\n               );\n             }}\n           </Query>\n"
                },
                {
                    "date": 1631091505260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState } from 'react';\n import RepoTable from './RepoTable';\n import { gql } from 'apollo-boost';\n import { Query } from 'react-apollo';\n-import { Link, DataTableSkeleton } from 'carbon-components-react';\n+import { Link, DataTableSkeleton, Pagination } from 'carbon-components-react';\n \n const REPO_QUERY = gql`\n   query REPO_QUERY {\n     # Let's use carbon as our organization\n@@ -125,8 +125,22 @@\n                     rows={rows.slice(\n                       firstRowIndex,\n                       firstRowIndex + currentPageSize\n                     )}\n+                    <Pagination\n+  totalItems={totalItems}\n+  backwardText=\"Previous page\"\n+  forwardText=\"Next page\"\n+  pageSize={currentPageSize}\n+  pageSizes={[5, 10, 15, 25]}\n+  itemsPerPageText=\"Items per page\"\n+  onChange={({ page, pageSize }) => {\n+    if (pageSize !== currentPageSize) {\n+      setCurrentPageSize(pageSize);\n+    }\n+    setFirstRowIndex(pageSize * (page - 1));\n+  }}\n+/>\n                   />\n                 </>\n               );\n             }}\n"
                },
                {
                    "date": 1631091520243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,23 +125,23 @@\n                     rows={rows.slice(\n                       firstRowIndex,\n                       firstRowIndex + currentPageSize\n                     )}\n-                    <Pagination\n-  totalItems={totalItems}\n-  backwardText=\"Previous page\"\n-  forwardText=\"Next page\"\n-  pageSize={currentPageSize}\n-  pageSizes={[5, 10, 15, 25]}\n-  itemsPerPageText=\"Items per page\"\n-  onChange={({ page, pageSize }) => {\n-    if (pageSize !== currentPageSize) {\n-      setCurrentPageSize(pageSize);\n-    }\n-    setFirstRowIndex(pageSize * (page - 1));\n-  }}\n-/>\n                   />\n+                  <Pagination\n+                    totalItems={totalItems}\n+                    backwardText=\"Previous page\"\n+                    forwardText=\"Next page\"\n+                    pageSize={currentPageSize}\n+                    pageSizes={[5, 10, 15, 25]}\n+                    itemsPerPageText=\"Items per page\"\n+                    onChange={({ page, pageSize }) => {\n+                      if (pageSize !== currentPageSize) {\n+                        setCurrentPageSize(pageSize);\n+                      }\n+                      setFirstRowIndex(pageSize * (page - 1));\n+                    }}\n+                  />\n                 </>\n               );\n             }}\n           </Query>\n"
                }
            ],
            "date": 1631090760704,
            "name": "Commit-0",
            "content": "import React from 'react';\nimport RepoTable from './RepoTable';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\nimport { Link } from 'carbon-components-react';\n\nconst REPO_QUERY = gql`\n  query REPO_QUERY {\n    # Let's use carbon as our organization\n    organization(login: \"carbon-design-system\") {\n      # We'll grab all the repositories in one go. To load more resources\n      # continuously, see the advanced topics.\n      repositories(first: 75, orderBy: { field: UPDATED_AT, direction: DESC }) {\n        totalCount\n        nodes {\n          url\n          homepageUrl\n          issues(filterBy: { states: OPEN }) {\n            totalCount\n          }\n          stargazers {\n            totalCount\n          }\n          releases(first: 1) {\n            totalCount\n            nodes {\n              name\n            }\n          }\n          name\n          updatedAt\n          createdAt\n          description\n          id\n        }\n      }\n    }\n  }\n`;\n\nconst headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n  {\n    key: 'createdAt',\n    header: 'Created',\n  },\n  {\n    key: 'updatedAt',\n    header: 'Updated',\n  },\n  {\n    key: 'issueCount',\n    header: 'Open Issues',\n  },\n  {\n    key: 'stars',\n    header: 'Stars',\n  },\n  {\n    key: 'links',\n    header: 'Links',\n  },\n];\n\nconst rows = [\n  {\n    id: '1',\n    name: 'Repo 1',\n    createdAt: 'Date',\n    updatedAt: 'Date',\n    issueCount: '123',\n    stars: '456',\n    links: 'Links',\n  },\n  {\n    id: '2',\n    name: 'Repo 2',\n    createdAt: 'Date',\n    updatedAt: 'Date',\n    issueCount: '123',\n    stars: '456',\n    links: 'Links',\n  },\n  {\n    id: '3',\n    name: 'Repo 3',\n    createdAt: 'Date',\n    updatedAt: 'Date',\n    issueCount: '123',\n    stars: '456',\n    links: 'Links',\n  },\n];\n\nconst LinkList = ({ url, homepageUrl }) => (\n  <ul style={{ display: 'flex' }}>\n    <li>\n      <Link href={url}>GitHub</Link>\n    </li>\n    {homepageUrl && (\n      <li>\n        <span>&nbsp;|&nbsp;</span>\n        <Link href={homepageUrl}>Homepage</Link>\n      </li>\n    )}\n  </ul>\n);\n\nconst getRowItems = rows =>\n  rows.map(row => ({\n    ...row,\n    key: row.id,\n    stars: row.stargazers.totalCount,\n    issueCount: row.issues.totalCount,\n    createdAt: new Date(row.createdAt).toLocaleDateString(),\n    updatedAt: new Date(row.updatedAt).toLocaleDateString(),\n    links: <LinkList url={row.url} homepageUrl={row.homepageUrl} />,\n  }));\n\nconst RepoPage = () => {\n  return (\n    <div className=\"bx--grid bx--grid--full-width bx--grid--no-gutter repo-page\">\n      <div className=\"bx--row repo-page__r1\">\n        <div className=\"bx--col-lg-16\">\n          <Query query={REPO_QUERY}>\n            {({ loading, error, data }) => {\n              // Wait for the request to complete\n              if (loading) return 'Loading...';\n\n              // Something went wrong with the data fetching\n              if (error) return `Error! ${error.message}`;\n\n              // If we're here, we've got our data!\n              console.log(data.organization);\n\n              return (\n                <>\n                  <RepoTable headers={headers} rows={rows} />\n                </>\n              );\n            }}\n          </Query>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RepoPage;\n"
        }
    ]
}