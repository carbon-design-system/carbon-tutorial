// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Landing Page exists 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RepoPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="bx--row"
      >
        <div
          className="bx--col-lg-3"
        >
          <label
            className="bx--label"
            htmlFor="search-1"
          >
            Filter by repo
          </label>
          <Search
            id="search-1"
            labelText="Filter by repo"
            onChange={[Function]}
            placeHolderText="Filter repo"
            small={true}
            type="text"
          />
          <ForwardRef(Checkbox)
            checked={true}
            id="checkbox-label-0"
            indeterminate={false}
            labelText="All"
            onChange={[Function]}
          />
          <ForwardRef(Checkbox)
            id="checkbox-label-1"
            indeterminate={false}
            labelText="Repo 1"
            onChange={[Function]}
          />
          <ForwardRef(Checkbox)
            id="checkbox-label-2"
            indeterminate={false}
            labelText="Repo 2"
            onChange={[Function]}
          />
          <ForwardRef(Checkbox)
            id="checkbox-label-3"
            indeterminate={false}
            labelText="Repo 3"
            onChange={[Function]}
          />
          <ForwardRef(Checkbox)
            id="checkbox-label-4"
            indeterminate={false}
            labelText="Repo 4"
            onChange={[Function]}
          />
          <ForwardRef(Button)
            disabled={false}
            iconDescription="Provide icon description if icon is used"
            kind="ghost"
            small={false}
            tabIndex={0}
            type="button"
          >
            See more
          </ForwardRef(Button)>
        </div>
        <div
          className="bx--col-lg-13"
        >
          <DataTable
            filterRows={[Function]}
            headers={
              Array [
                Object {
                  "header": "Name",
                  "key": "name",
                },
                Object {
                  "header": "Protocol",
                  "key": "protocol",
                },
                Object {
                  "header": "Port",
                  "key": "port",
                },
                Object {
                  "header": "Rule",
                  "key": "rule",
                },
                Object {
                  "header": "Attached Groups",
                  "key": "attached_groups",
                },
                Object {
                  "header": "Status",
                  "key": "status",
                },
              ]
            }
            locale="en"
            render={[Function]}
            rows={
              Array [
                Object {
                  "attached_groups": "Kevins VM Groups",
                  "id": "a",
                  "name": "Issue",
                  "port": 3000,
                  "protocol": "HTTP",
                  "rule": "Round robin",
                  "status": "Disabled",
                },
                Object {
                  "attached_groups": "Maureens VM Groups",
                  "id": "b",
                  "name": "Load Balancer 1",
                  "port": 443,
                  "protocol": "HTTP",
                  "rule": "Round robin",
                  "status": "Starting",
                },
                Object {
                  "attached_groups": "Andrews VM Groups",
                  "id": "c",
                  "name": "Load Balancer 2",
                  "port": 80,
                  "protocol": "HTTP",
                  "rule": "DNS delegation",
                  "status": "Active",
                },
              ]
            }
            sortRow={[Function]}
            translateWithId={[Function]}
          />
          <Pagination
            backwardText="Previous page"
            disabled={false}
            forwardText="Next page"
            isLastPage={false}
            itemRangeText={[Function]}
            itemText={[Function]}
            itemsPerPageText="Items per page"
            page={1}
            pageInputDisabled={false}
            pageNumberText="Page Number"
            pageRangeText={[Function]}
            pageSize={100}
            pageSizes={
              Array [
                10,
                25,
                50,
                100,
              ]
            }
            pageText={[Function]}
            pagesUnknown={false}
            totalItems={1228}
          />
        </div>
      </div>,
      "className": "bx--grid repo-page",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="bx--col-lg-3"
          >
            <label
              className="bx--label"
              htmlFor="search-1"
            >
              Filter by repo
            </label>
            <Search
              id="search-1"
              labelText="Filter by repo"
              onChange={[Function]}
              placeHolderText="Filter repo"
              small={true}
              type="text"
            />
            <ForwardRef(Checkbox)
              checked={true}
              id="checkbox-label-0"
              indeterminate={false}
              labelText="All"
              onChange={[Function]}
            />
            <ForwardRef(Checkbox)
              id="checkbox-label-1"
              indeterminate={false}
              labelText="Repo 1"
              onChange={[Function]}
            />
            <ForwardRef(Checkbox)
              id="checkbox-label-2"
              indeterminate={false}
              labelText="Repo 2"
              onChange={[Function]}
            />
            <ForwardRef(Checkbox)
              id="checkbox-label-3"
              indeterminate={false}
              labelText="Repo 3"
              onChange={[Function]}
            />
            <ForwardRef(Checkbox)
              id="checkbox-label-4"
              indeterminate={false}
              labelText="Repo 4"
              onChange={[Function]}
            />
            <ForwardRef(Button)
              disabled={false}
              iconDescription="Provide icon description if icon is used"
              kind="ghost"
              small={false}
              tabIndex={0}
              type="button"
            >
              See more
            </ForwardRef(Button)>
          </div>,
          <div
            className="bx--col-lg-13"
          >
            <DataTable
              filterRows={[Function]}
              headers={
                Array [
                  Object {
                    "header": "Name",
                    "key": "name",
                  },
                  Object {
                    "header": "Protocol",
                    "key": "protocol",
                  },
                  Object {
                    "header": "Port",
                    "key": "port",
                  },
                  Object {
                    "header": "Rule",
                    "key": "rule",
                  },
                  Object {
                    "header": "Attached Groups",
                    "key": "attached_groups",
                  },
                  Object {
                    "header": "Status",
                    "key": "status",
                  },
                ]
              }
              locale="en"
              render={[Function]}
              rows={
                Array [
                  Object {
                    "attached_groups": "Kevins VM Groups",
                    "id": "a",
                    "name": "Issue",
                    "port": 3000,
                    "protocol": "HTTP",
                    "rule": "Round robin",
                    "status": "Disabled",
                  },
                  Object {
                    "attached_groups": "Maureens VM Groups",
                    "id": "b",
                    "name": "Load Balancer 1",
                    "port": 443,
                    "protocol": "HTTP",
                    "rule": "Round robin",
                    "status": "Starting",
                  },
                  Object {
                    "attached_groups": "Andrews VM Groups",
                    "id": "c",
                    "name": "Load Balancer 2",
                    "port": 80,
                    "protocol": "HTTP",
                    "rule": "DNS delegation",
                    "status": "Active",
                  },
                ]
              }
              sortRow={[Function]}
              translateWithId={[Function]}
            />
            <Pagination
              backwardText="Previous page"
              disabled={false}
              forwardText="Next page"
              isLastPage={false}
              itemRangeText={[Function]}
              itemText={[Function]}
              itemsPerPageText="Items per page"
              page={1}
              pageInputDisabled={false}
              pageNumberText="Page Number"
              pageRangeText={[Function]}
              pageSize={100}
              pageSizes={
                Array [
                  10,
                  25,
                  50,
                  100,
                ]
              }
              pageText={[Function]}
              pagesUnknown={false}
              totalItems={1228}
            />
          </div>,
        ],
        "className": "bx--row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                className="bx--label"
                htmlFor="search-1"
              >
                Filter by repo
              </label>,
              <Search
                id="search-1"
                labelText="Filter by repo"
                onChange={[Function]}
                placeHolderText="Filter repo"
                small={true}
                type="text"
              />,
              <ForwardRef(Checkbox)
                checked={true}
                id="checkbox-label-0"
                indeterminate={false}
                labelText="All"
                onChange={[Function]}
              />,
              <ForwardRef(Checkbox)
                id="checkbox-label-1"
                indeterminate={false}
                labelText="Repo 1"
                onChange={[Function]}
              />,
              <ForwardRef(Checkbox)
                id="checkbox-label-2"
                indeterminate={false}
                labelText="Repo 2"
                onChange={[Function]}
              />,
              <ForwardRef(Checkbox)
                id="checkbox-label-3"
                indeterminate={false}
                labelText="Repo 3"
                onChange={[Function]}
              />,
              <ForwardRef(Checkbox)
                id="checkbox-label-4"
                indeterminate={false}
                labelText="Repo 4"
                onChange={[Function]}
              />,
              <ForwardRef(Button)
                disabled={false}
                iconDescription="Provide icon description if icon is used"
                kind="ghost"
                small={false}
                tabIndex={0}
                type="button"
              >
                See more
              </ForwardRef(Button)>,
            ],
            "className": "bx--col-lg-3",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Filter by repo",
                "className": "bx--label",
                "htmlFor": "search-1",
              },
              "ref": null,
              "rendered": "Filter by repo",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "id": "search-1",
                "labelText": "Filter by repo",
                "onChange": [Function],
                "placeHolderText": "Filter repo",
                "small": true,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "checked": true,
                "id": "checkbox-label-0",
                "indeterminate": false,
                "labelText": "All",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "indeterminate": false,
                  "onChange": [Function],
                },
                "propTypes": Object {
                  "checked": [Function],
                  "className": [Function],
                  "defaultChecked": [Function],
                  "disabled": [Function],
                  "hideLabel": [Function],
                  "id": [Function],
                  "indeterminate": [Function],
                  "labelText": [Function],
                  "onChange": [Function],
                  "title": [Function],
                  "wrapperClassName": [Function],
                },
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "id": "checkbox-label-1",
                "indeterminate": false,
                "labelText": "Repo 1",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "indeterminate": false,
                  "onChange": [Function],
                },
                "propTypes": Object {
                  "checked": [Function],
                  "className": [Function],
                  "defaultChecked": [Function],
                  "disabled": [Function],
                  "hideLabel": [Function],
                  "id": [Function],
                  "indeterminate": [Function],
                  "labelText": [Function],
                  "onChange": [Function],
                  "title": [Function],
                  "wrapperClassName": [Function],
                },
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "id": "checkbox-label-2",
                "indeterminate": false,
                "labelText": "Repo 2",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "indeterminate": false,
                  "onChange": [Function],
                },
                "propTypes": Object {
                  "checked": [Function],
                  "className": [Function],
                  "defaultChecked": [Function],
                  "disabled": [Function],
                  "hideLabel": [Function],
                  "id": [Function],
                  "indeterminate": [Function],
                  "labelText": [Function],
                  "onChange": [Function],
                  "title": [Function],
                  "wrapperClassName": [Function],
                },
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "id": "checkbox-label-3",
                "indeterminate": false,
                "labelText": "Repo 3",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "indeterminate": false,
                  "onChange": [Function],
                },
                "propTypes": Object {
                  "checked": [Function],
                  "className": [Function],
                  "defaultChecked": [Function],
                  "disabled": [Function],
                  "hideLabel": [Function],
                  "id": [Function],
                  "indeterminate": [Function],
                  "labelText": [Function],
                  "onChange": [Function],
                  "title": [Function],
                  "wrapperClassName": [Function],
                },
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "id": "checkbox-label-4",
                "indeterminate": false,
                "labelText": "Repo 4",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "indeterminate": false,
                  "onChange": [Function],
                },
                "propTypes": Object {
                  "checked": [Function],
                  "className": [Function],
                  "defaultChecked": [Function],
                  "disabled": [Function],
                  "hideLabel": [Function],
                  "id": [Function],
                  "indeterminate": [Function],
                  "labelText": [Function],
                  "onChange": [Function],
                  "title": [Function],
                  "wrapperClassName": [Function],
                },
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "See more",
                "disabled": false,
                "iconDescription": "Provide icon description if icon is used",
                "kind": "ghost",
                "small": false,
                "tabIndex": 0,
                "type": "button",
              },
              "ref": null,
              "rendered": "See more",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "disabled": false,
                  "iconDescription": "Provide icon description if icon is used",
                  "kind": "primary",
                  "small": false,
                  "tabIndex": 0,
                  "type": "button",
                },
                "propTypes": Object {
                  "as": [Function],
                  "children": [Function],
                  "className": [Function],
                  "disabled": [Function],
                  "href": [Function],
                  "icon": [Function],
                  "iconDescription": [Function],
                  "kind": [Function],
                  "renderIcon": [Function],
                  "role": [Function],
                  "small": [Function],
                  "tabIndex": [Function],
                  "type": [Function],
                },
                "render": [Function],
              },
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <DataTable
                filterRows={[Function]}
                headers={
                  Array [
                    Object {
                      "header": "Name",
                      "key": "name",
                    },
                    Object {
                      "header": "Protocol",
                      "key": "protocol",
                    },
                    Object {
                      "header": "Port",
                      "key": "port",
                    },
                    Object {
                      "header": "Rule",
                      "key": "rule",
                    },
                    Object {
                      "header": "Attached Groups",
                      "key": "attached_groups",
                    },
                    Object {
                      "header": "Status",
                      "key": "status",
                    },
                  ]
                }
                locale="en"
                render={[Function]}
                rows={
                  Array [
                    Object {
                      "attached_groups": "Kevins VM Groups",
                      "id": "a",
                      "name": "Issue",
                      "port": 3000,
                      "protocol": "HTTP",
                      "rule": "Round robin",
                      "status": "Disabled",
                    },
                    Object {
                      "attached_groups": "Maureens VM Groups",
                      "id": "b",
                      "name": "Load Balancer 1",
                      "port": 443,
                      "protocol": "HTTP",
                      "rule": "Round robin",
                      "status": "Starting",
                    },
                    Object {
                      "attached_groups": "Andrews VM Groups",
                      "id": "c",
                      "name": "Load Balancer 2",
                      "port": 80,
                      "protocol": "HTTP",
                      "rule": "DNS delegation",
                      "status": "Active",
                    },
                  ]
                }
                sortRow={[Function]}
                translateWithId={[Function]}
              />,
              <Pagination
                backwardText="Previous page"
                disabled={false}
                forwardText="Next page"
                isLastPage={false}
                itemRangeText={[Function]}
                itemText={[Function]}
                itemsPerPageText="Items per page"
                page={1}
                pageInputDisabled={false}
                pageNumberText="Page Number"
                pageRangeText={[Function]}
                pageSize={100}
                pageSizes={
                  Array [
                    10,
                    25,
                    50,
                    100,
                  ]
                }
                pageText={[Function]}
                pagesUnknown={false}
                totalItems={1228}
              />,
            ],
            "className": "bx--col-lg-13",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "filterRows": [Function],
                "headers": Array [
                  Object {
                    "header": "Name",
                    "key": "name",
                  },
                  Object {
                    "header": "Protocol",
                    "key": "protocol",
                  },
                  Object {
                    "header": "Port",
                    "key": "port",
                  },
                  Object {
                    "header": "Rule",
                    "key": "rule",
                  },
                  Object {
                    "header": "Attached Groups",
                    "key": "attached_groups",
                  },
                  Object {
                    "header": "Status",
                    "key": "status",
                  },
                ],
                "locale": "en",
                "render": [Function],
                "rows": Array [
                  Object {
                    "attached_groups": "Kevins VM Groups",
                    "id": "a",
                    "name": "Issue",
                    "port": 3000,
                    "protocol": "HTTP",
                    "rule": "Round robin",
                    "status": "Disabled",
                  },
                  Object {
                    "attached_groups": "Maureens VM Groups",
                    "id": "b",
                    "name": "Load Balancer 1",
                    "port": 443,
                    "protocol": "HTTP",
                    "rule": "Round robin",
                    "status": "Starting",
                  },
                  Object {
                    "attached_groups": "Andrews VM Groups",
                    "id": "c",
                    "name": "Load Balancer 2",
                    "port": 80,
                    "protocol": "HTTP",
                    "rule": "DNS delegation",
                    "status": "Active",
                  },
                ],
                "sortRow": [Function],
                "translateWithId": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "backwardText": "Previous page",
                "disabled": false,
                "forwardText": "Next page",
                "isLastPage": false,
                "itemRangeText": [Function],
                "itemText": [Function],
                "itemsPerPageText": "Items per page",
                "page": 1,
                "pageInputDisabled": false,
                "pageNumberText": "Page Number",
                "pageRangeText": [Function],
                "pageSize": 100,
                "pageSizes": Array [
                  10,
                  25,
                  50,
                  100,
                ],
                "pageText": [Function],
                "pagesUnknown": false,
                "totalItems": 1228,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="bx--row"
        >
          <div
            className="bx--col-lg-3"
          >
            <label
              className="bx--label"
              htmlFor="search-1"
            >
              Filter by repo
            </label>
            <Search
              id="search-1"
              labelText="Filter by repo"
              onChange={[Function]}
              placeHolderText="Filter repo"
              small={true}
              type="text"
            />
            <ForwardRef(Checkbox)
              checked={true}
              id="checkbox-label-0"
              indeterminate={false}
              labelText="All"
              onChange={[Function]}
            />
            <ForwardRef(Checkbox)
              id="checkbox-label-1"
              indeterminate={false}
              labelText="Repo 1"
              onChange={[Function]}
            />
            <ForwardRef(Checkbox)
              id="checkbox-label-2"
              indeterminate={false}
              labelText="Repo 2"
              onChange={[Function]}
            />
            <ForwardRef(Checkbox)
              id="checkbox-label-3"
              indeterminate={false}
              labelText="Repo 3"
              onChange={[Function]}
            />
            <ForwardRef(Checkbox)
              id="checkbox-label-4"
              indeterminate={false}
              labelText="Repo 4"
              onChange={[Function]}
            />
            <ForwardRef(Button)
              disabled={false}
              iconDescription="Provide icon description if icon is used"
              kind="ghost"
              small={false}
              tabIndex={0}
              type="button"
            >
              See more
            </ForwardRef(Button)>
          </div>
          <div
            className="bx--col-lg-13"
          >
            <DataTable
              filterRows={[Function]}
              headers={
                Array [
                  Object {
                    "header": "Name",
                    "key": "name",
                  },
                  Object {
                    "header": "Protocol",
                    "key": "protocol",
                  },
                  Object {
                    "header": "Port",
                    "key": "port",
                  },
                  Object {
                    "header": "Rule",
                    "key": "rule",
                  },
                  Object {
                    "header": "Attached Groups",
                    "key": "attached_groups",
                  },
                  Object {
                    "header": "Status",
                    "key": "status",
                  },
                ]
              }
              locale="en"
              render={[Function]}
              rows={
                Array [
                  Object {
                    "attached_groups": "Kevins VM Groups",
                    "id": "a",
                    "name": "Issue",
                    "port": 3000,
                    "protocol": "HTTP",
                    "rule": "Round robin",
                    "status": "Disabled",
                  },
                  Object {
                    "attached_groups": "Maureens VM Groups",
                    "id": "b",
                    "name": "Load Balancer 1",
                    "port": 443,
                    "protocol": "HTTP",
                    "rule": "Round robin",
                    "status": "Starting",
                  },
                  Object {
                    "attached_groups": "Andrews VM Groups",
                    "id": "c",
                    "name": "Load Balancer 2",
                    "port": 80,
                    "protocol": "HTTP",
                    "rule": "DNS delegation",
                    "status": "Active",
                  },
                ]
              }
              sortRow={[Function]}
              translateWithId={[Function]}
            />
            <Pagination
              backwardText="Previous page"
              disabled={false}
              forwardText="Next page"
              isLastPage={false}
              itemRangeText={[Function]}
              itemText={[Function]}
              itemsPerPageText="Items per page"
              page={1}
              pageInputDisabled={false}
              pageNumberText="Page Number"
              pageRangeText={[Function]}
              pageSize={100}
              pageSizes={
                Array [
                  10,
                  25,
                  50,
                  100,
                ]
              }
              pageText={[Function]}
              pagesUnknown={false}
              totalItems={1228}
            />
          </div>
        </div>,
        "className": "bx--grid repo-page",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="bx--col-lg-3"
            >
              <label
                className="bx--label"
                htmlFor="search-1"
              >
                Filter by repo
              </label>
              <Search
                id="search-1"
                labelText="Filter by repo"
                onChange={[Function]}
                placeHolderText="Filter repo"
                small={true}
                type="text"
              />
              <ForwardRef(Checkbox)
                checked={true}
                id="checkbox-label-0"
                indeterminate={false}
                labelText="All"
                onChange={[Function]}
              />
              <ForwardRef(Checkbox)
                id="checkbox-label-1"
                indeterminate={false}
                labelText="Repo 1"
                onChange={[Function]}
              />
              <ForwardRef(Checkbox)
                id="checkbox-label-2"
                indeterminate={false}
                labelText="Repo 2"
                onChange={[Function]}
              />
              <ForwardRef(Checkbox)
                id="checkbox-label-3"
                indeterminate={false}
                labelText="Repo 3"
                onChange={[Function]}
              />
              <ForwardRef(Checkbox)
                id="checkbox-label-4"
                indeterminate={false}
                labelText="Repo 4"
                onChange={[Function]}
              />
              <ForwardRef(Button)
                disabled={false}
                iconDescription="Provide icon description if icon is used"
                kind="ghost"
                small={false}
                tabIndex={0}
                type="button"
              >
                See more
              </ForwardRef(Button)>
            </div>,
            <div
              className="bx--col-lg-13"
            >
              <DataTable
                filterRows={[Function]}
                headers={
                  Array [
                    Object {
                      "header": "Name",
                      "key": "name",
                    },
                    Object {
                      "header": "Protocol",
                      "key": "protocol",
                    },
                    Object {
                      "header": "Port",
                      "key": "port",
                    },
                    Object {
                      "header": "Rule",
                      "key": "rule",
                    },
                    Object {
                      "header": "Attached Groups",
                      "key": "attached_groups",
                    },
                    Object {
                      "header": "Status",
                      "key": "status",
                    },
                  ]
                }
                locale="en"
                render={[Function]}
                rows={
                  Array [
                    Object {
                      "attached_groups": "Kevins VM Groups",
                      "id": "a",
                      "name": "Issue",
                      "port": 3000,
                      "protocol": "HTTP",
                      "rule": "Round robin",
                      "status": "Disabled",
                    },
                    Object {
                      "attached_groups": "Maureens VM Groups",
                      "id": "b",
                      "name": "Load Balancer 1",
                      "port": 443,
                      "protocol": "HTTP",
                      "rule": "Round robin",
                      "status": "Starting",
                    },
                    Object {
                      "attached_groups": "Andrews VM Groups",
                      "id": "c",
                      "name": "Load Balancer 2",
                      "port": 80,
                      "protocol": "HTTP",
                      "rule": "DNS delegation",
                      "status": "Active",
                    },
                  ]
                }
                sortRow={[Function]}
                translateWithId={[Function]}
              />
              <Pagination
                backwardText="Previous page"
                disabled={false}
                forwardText="Next page"
                isLastPage={false}
                itemRangeText={[Function]}
                itemText={[Function]}
                itemsPerPageText="Items per page"
                page={1}
                pageInputDisabled={false}
                pageNumberText="Page Number"
                pageRangeText={[Function]}
                pageSize={100}
                pageSizes={
                  Array [
                    10,
                    25,
                    50,
                    100,
                  ]
                }
                pageText={[Function]}
                pagesUnknown={false}
                totalItems={1228}
              />
            </div>,
          ],
          "className": "bx--row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="bx--label"
                  htmlFor="search-1"
                >
                  Filter by repo
                </label>,
                <Search
                  id="search-1"
                  labelText="Filter by repo"
                  onChange={[Function]}
                  placeHolderText="Filter repo"
                  small={true}
                  type="text"
                />,
                <ForwardRef(Checkbox)
                  checked={true}
                  id="checkbox-label-0"
                  indeterminate={false}
                  labelText="All"
                  onChange={[Function]}
                />,
                <ForwardRef(Checkbox)
                  id="checkbox-label-1"
                  indeterminate={false}
                  labelText="Repo 1"
                  onChange={[Function]}
                />,
                <ForwardRef(Checkbox)
                  id="checkbox-label-2"
                  indeterminate={false}
                  labelText="Repo 2"
                  onChange={[Function]}
                />,
                <ForwardRef(Checkbox)
                  id="checkbox-label-3"
                  indeterminate={false}
                  labelText="Repo 3"
                  onChange={[Function]}
                />,
                <ForwardRef(Checkbox)
                  id="checkbox-label-4"
                  indeterminate={false}
                  labelText="Repo 4"
                  onChange={[Function]}
                />,
                <ForwardRef(Button)
                  disabled={false}
                  iconDescription="Provide icon description if icon is used"
                  kind="ghost"
                  small={false}
                  tabIndex={0}
                  type="button"
                >
                  See more
                </ForwardRef(Button)>,
              ],
              "className": "bx--col-lg-3",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Filter by repo",
                  "className": "bx--label",
                  "htmlFor": "search-1",
                },
                "ref": null,
                "rendered": "Filter by repo",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "id": "search-1",
                  "labelText": "Filter by repo",
                  "onChange": [Function],
                  "placeHolderText": "Filter repo",
                  "small": true,
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "checked": true,
                  "id": "checkbox-label-0",
                  "indeterminate": false,
                  "labelText": "All",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "indeterminate": false,
                    "onChange": [Function],
                  },
                  "propTypes": Object {
                    "checked": [Function],
                    "className": [Function],
                    "defaultChecked": [Function],
                    "disabled": [Function],
                    "hideLabel": [Function],
                    "id": [Function],
                    "indeterminate": [Function],
                    "labelText": [Function],
                    "onChange": [Function],
                    "title": [Function],
                    "wrapperClassName": [Function],
                  },
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "id": "checkbox-label-1",
                  "indeterminate": false,
                  "labelText": "Repo 1",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "indeterminate": false,
                    "onChange": [Function],
                  },
                  "propTypes": Object {
                    "checked": [Function],
                    "className": [Function],
                    "defaultChecked": [Function],
                    "disabled": [Function],
                    "hideLabel": [Function],
                    "id": [Function],
                    "indeterminate": [Function],
                    "labelText": [Function],
                    "onChange": [Function],
                    "title": [Function],
                    "wrapperClassName": [Function],
                  },
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "id": "checkbox-label-2",
                  "indeterminate": false,
                  "labelText": "Repo 2",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "indeterminate": false,
                    "onChange": [Function],
                  },
                  "propTypes": Object {
                    "checked": [Function],
                    "className": [Function],
                    "defaultChecked": [Function],
                    "disabled": [Function],
                    "hideLabel": [Function],
                    "id": [Function],
                    "indeterminate": [Function],
                    "labelText": [Function],
                    "onChange": [Function],
                    "title": [Function],
                    "wrapperClassName": [Function],
                  },
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "id": "checkbox-label-3",
                  "indeterminate": false,
                  "labelText": "Repo 3",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "indeterminate": false,
                    "onChange": [Function],
                  },
                  "propTypes": Object {
                    "checked": [Function],
                    "className": [Function],
                    "defaultChecked": [Function],
                    "disabled": [Function],
                    "hideLabel": [Function],
                    "id": [Function],
                    "indeterminate": [Function],
                    "labelText": [Function],
                    "onChange": [Function],
                    "title": [Function],
                    "wrapperClassName": [Function],
                  },
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "id": "checkbox-label-4",
                  "indeterminate": false,
                  "labelText": "Repo 4",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "indeterminate": false,
                    "onChange": [Function],
                  },
                  "propTypes": Object {
                    "checked": [Function],
                    "className": [Function],
                    "defaultChecked": [Function],
                    "disabled": [Function],
                    "hideLabel": [Function],
                    "id": [Function],
                    "indeterminate": [Function],
                    "labelText": [Function],
                    "onChange": [Function],
                    "title": [Function],
                    "wrapperClassName": [Function],
                  },
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "See more",
                  "disabled": false,
                  "iconDescription": "Provide icon description if icon is used",
                  "kind": "ghost",
                  "small": false,
                  "tabIndex": 0,
                  "type": "button",
                },
                "ref": null,
                "rendered": "See more",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "disabled": false,
                    "iconDescription": "Provide icon description if icon is used",
                    "kind": "primary",
                    "small": false,
                    "tabIndex": 0,
                    "type": "button",
                  },
                  "propTypes": Object {
                    "as": [Function],
                    "children": [Function],
                    "className": [Function],
                    "disabled": [Function],
                    "href": [Function],
                    "icon": [Function],
                    "iconDescription": [Function],
                    "kind": [Function],
                    "renderIcon": [Function],
                    "role": [Function],
                    "small": [Function],
                    "tabIndex": [Function],
                    "type": [Function],
                  },
                  "render": [Function],
                },
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <DataTable
                  filterRows={[Function]}
                  headers={
                    Array [
                      Object {
                        "header": "Name",
                        "key": "name",
                      },
                      Object {
                        "header": "Protocol",
                        "key": "protocol",
                      },
                      Object {
                        "header": "Port",
                        "key": "port",
                      },
                      Object {
                        "header": "Rule",
                        "key": "rule",
                      },
                      Object {
                        "header": "Attached Groups",
                        "key": "attached_groups",
                      },
                      Object {
                        "header": "Status",
                        "key": "status",
                      },
                    ]
                  }
                  locale="en"
                  render={[Function]}
                  rows={
                    Array [
                      Object {
                        "attached_groups": "Kevins VM Groups",
                        "id": "a",
                        "name": "Issue",
                        "port": 3000,
                        "protocol": "HTTP",
                        "rule": "Round robin",
                        "status": "Disabled",
                      },
                      Object {
                        "attached_groups": "Maureens VM Groups",
                        "id": "b",
                        "name": "Load Balancer 1",
                        "port": 443,
                        "protocol": "HTTP",
                        "rule": "Round robin",
                        "status": "Starting",
                      },
                      Object {
                        "attached_groups": "Andrews VM Groups",
                        "id": "c",
                        "name": "Load Balancer 2",
                        "port": 80,
                        "protocol": "HTTP",
                        "rule": "DNS delegation",
                        "status": "Active",
                      },
                    ]
                  }
                  sortRow={[Function]}
                  translateWithId={[Function]}
                />,
                <Pagination
                  backwardText="Previous page"
                  disabled={false}
                  forwardText="Next page"
                  isLastPage={false}
                  itemRangeText={[Function]}
                  itemText={[Function]}
                  itemsPerPageText="Items per page"
                  page={1}
                  pageInputDisabled={false}
                  pageNumberText="Page Number"
                  pageRangeText={[Function]}
                  pageSize={100}
                  pageSizes={
                    Array [
                      10,
                      25,
                      50,
                      100,
                    ]
                  }
                  pageText={[Function]}
                  pagesUnknown={false}
                  totalItems={1228}
                />,
              ],
              "className": "bx--col-lg-13",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "filterRows": [Function],
                  "headers": Array [
                    Object {
                      "header": "Name",
                      "key": "name",
                    },
                    Object {
                      "header": "Protocol",
                      "key": "protocol",
                    },
                    Object {
                      "header": "Port",
                      "key": "port",
                    },
                    Object {
                      "header": "Rule",
                      "key": "rule",
                    },
                    Object {
                      "header": "Attached Groups",
                      "key": "attached_groups",
                    },
                    Object {
                      "header": "Status",
                      "key": "status",
                    },
                  ],
                  "locale": "en",
                  "render": [Function],
                  "rows": Array [
                    Object {
                      "attached_groups": "Kevins VM Groups",
                      "id": "a",
                      "name": "Issue",
                      "port": 3000,
                      "protocol": "HTTP",
                      "rule": "Round robin",
                      "status": "Disabled",
                    },
                    Object {
                      "attached_groups": "Maureens VM Groups",
                      "id": "b",
                      "name": "Load Balancer 1",
                      "port": 443,
                      "protocol": "HTTP",
                      "rule": "Round robin",
                      "status": "Starting",
                    },
                    Object {
                      "attached_groups": "Andrews VM Groups",
                      "id": "c",
                      "name": "Load Balancer 2",
                      "port": 80,
                      "protocol": "HTTP",
                      "rule": "DNS delegation",
                      "status": "Active",
                    },
                  ],
                  "sortRow": [Function],
                  "translateWithId": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backwardText": "Previous page",
                  "disabled": false,
                  "forwardText": "Next page",
                  "isLastPage": false,
                  "itemRangeText": [Function],
                  "itemText": [Function],
                  "itemsPerPageText": "Items per page",
                  "page": 1,
                  "pageInputDisabled": false,
                  "pageNumberText": "Page Number",
                  "pageRangeText": [Function],
                  "pageSize": 100,
                  "pageSizes": Array [
                    10,
                    25,
                    50,
                    100,
                  ],
                  "pageText": [Function],
                  "pagesUnknown": false,
                  "totalItems": 1228,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
